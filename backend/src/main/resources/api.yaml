openapi: 3.0.0
info:
  title: Cucumber UI Runner API
  description: This API permits to upload Cucumber Jar Project and run tests
  version: 1.0.0
servers:
  - url: /api/v1
    description: Optional server description, e.g. Main (production) server
paths:
  /directory:
    post:
      operationId: makeDirectory
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                directory:
                  type: string
                  format: string
              required:
                - directory
      responses:
        '200': # status code
          description: A JSON array of user names
          content:
            text/plain:
              schema:
                type: string
                example: pong
  /files/{pathB64}:
    delete:
      operationId: deleteFile
      parameters:
        - in: path
          name: pathB64
          description: File path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: File deleted
          content:
            text/plain:
              schema:
                type: string
                example: pong
    post:
      operationId: moveFile
      summary: Move file
      description: Move file
      parameters:
        - in: path
          name: pathB64
          description: File path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                dest:
                  type: string
                  format: string
              required:
                - dest
      responses:
        '200':
          description: File deleted
          content:
            text/plain:
              schema:
                type: string
                example: pong

  /files/{pathB64}/content:
    get:
      operationId: getFileContent
      parameters:
        - in: path
          name: pathB64
          description: File path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: File content
          content:
            application/*:
              schema:
                type: string
                format: binary
  /files:
    get:
      operationId: getFiles
      summary: Returns a list of file uploaded
      description: File uploaded
      responses:
        '200':
          description: A JSON array file uploaded
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FileResponse"

    put:
      operationId: uploadFile
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                filename:
                  type: string
                  format: string
                file:
                  type: string
                  format: binary
              required:
                - file
      responses:
        '200': # status code
          description: A JSON array of user names
          content:
            text/plain:
              schema:
                type: string
                example: filename
  /glues:
    get:
      operationId: getGlues
      summary: Returns a list of glue.
      description: List of keyword glue
      responses:
        '200':
          description: A JSON array of glue
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/GlueResponse"

  /test:
    post:
      operationId: runTest
      summary: Execute a test
      description: Execute a test
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TestRequest"
      responses:
        '200':
          description: Return log execution
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TestResponse"

  /test/{testId}:
    get:
      operationId: getTest
      summary: get test
      description: get test
      parameters:
        - in: path
          name: testId
          description: Test Identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Return log execution
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TestResponse"

  /html-reports/{reportHtmlId}:
    get:
      operationId: getHtmlReport
      summary: get html report from execution
      description: get html report from execution
      parameters:
        - in: path
          name: reportHtmlId
          description: HTML Report Identifier
          required: true
          schema:
            type: string
      responses:
        '200':
          description: HTML Report
          content:
            text/html:
              schema:
                type: string

  /configuration:
    get:
      operationId: getConfiguration
      summary: Get default configuration
      description: Get default configuration
      responses:
        '200':
          description: Return default configuration
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Configuration"

components:
  schemas:
    GlueResponse:
      type: object
      required:
        - name
        - path
      properties:
        type:
          type: string
        value:
          type: string
        comment:
          type: string
        clazz:
          type: string
        method:
          type: string
        arguments:
          type: array
          items:
            type: string

    FileResponse:
      type: object
      required:
        - name
        - path
        - isDirectory
      properties:
        name:
          type: string
        path:
          type: string
        pathB64:
          type: string
        isDirectory:
          type: boolean
        files:
          type: array
          items:
            $ref: "#/components/schemas/FileResponse"
    FileToDeleteRequest:
      type: object
      required:
        - path
      properties:
        path:
          type: string

    TestRequest:
      type: object
      required:
        - feature
      properties:
        feature:
          type: array
          items:
            type: string
        options:
          type: array
          items:
            $ref: "#/components/schemas/Configuration"

    TestResponse:
      type: object
      required:
        - feature
      properties:
        id:
          type: string
        status:
          type: string
          enum: [running, failed, success, error]
        reportHtmlId:
          type: string
        reportJson:
          type: array
          items:
            type: string
        reportPretty:
          type: array
          items:
            type: string

    Configuration:
      type: object
      required:
        - key
        - value
        - type
      properties:
        key:
          type: string
        value:
          type: string
        type:
          type: string
          enum: [ property, environment ]